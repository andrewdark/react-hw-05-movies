{"version":3,"file":"static/js/115.104c1685.chunk.js","mappings":"sMAoEA,UA/De,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwBJ,EAAAA,EAAAA,WAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAkCR,EAAAA,EAAAA,WAAS,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KA+BA,OAnBAC,EAAAA,EAAAA,YAAU,WACJV,GAAeA,EAAYW,OAAS,GAAKP,IAC3CK,GAAa,IACbG,EAAAA,EAAAA,IAAUZ,EAAa,GACpBa,MAAK,SAAAC,GACJX,EAAiBW,EAAKC,SACtBC,OAAOC,QAAQC,aAAa,KAAM,GAAlC,uBAAsDlB,GACvD,IACAmB,OAAM,SAAAC,GACLb,EAASa,EACV,IACAC,SAAQ,WACPhB,GAAQ,GACRI,GAAa,GACbR,EAAe,GAChB,IAEN,GAAE,CAACG,EAAMJ,KAGR,4BACE,2CACA,kBAAMsB,SAhCW,SAAAC,GACnBA,EAAMC,iBACNnB,GAAQ,EACT,EA6BiCoB,OAAO,MAArC,WACE,kBACEC,KAAK,OACLC,YAAY,iCACZC,UAAQ,EACRC,SAhCa,SAAAN,GACnB,IAAQO,EAAUP,EAAMQ,OAAhBD,MACR7B,EAAe6B,EAChB,EA8BOA,MAAO9B,KAET,mBAAQ0B,KAAK,SAAb,uBAGQ,MAATpB,IAAiB,uBAAIA,IACrBE,IAAa,SAAC,IAAD,KACd,wBACGN,EAAc8B,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAnB,SAA0BF,EAAMG,SADzBH,EAAME,GADO,QAQ/B,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovies } from '../../services/api';\nimport { Loader } from '../Loader/Loader';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [goit, setGoit] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    setGoit(true);\n  };\n\n  const hendleChange = event => {\n    const { value } = event.target;\n    setSearchQuery(value);\n  };\n\n  useEffect(() => {\n    if (searchQuery && searchQuery.length > 0 && goit) {\n      setIsLoading(true);\n      getMovies(searchQuery, 1)\n        .then(data => {\n          setSearchResults(data.results);\n          window.history.replaceState(null, '', `movies?query=${searchQuery}`);\n        })\n        .catch(err => {\n          setError(err);\n        })\n        .finally(() => {\n          setGoit(false);\n          setIsLoading(false);\n          setSearchQuery('');\n        });\n    }\n  }, [goit, searchQuery]);\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={hendleSubmit} method=\"GET\">\n        <input\n          type=\"text\"\n          placeholder=\"type somethin for searching...\"\n          required\n          onChange={hendleChange}\n          value={searchQuery}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error != null && <p>{error}</p>}\n      {isLoading && <Loader />}\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","goit","setGoit","error","setError","isLoading","setIsLoading","useEffect","length","getMovies","then","data","results","window","history","replaceState","catch","err","finally","onSubmit","event","preventDefault","method","type","placeholder","required","onChange","value","target","map","movie","to","id","title"],"sourceRoot":""}