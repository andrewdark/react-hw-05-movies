{"version":3,"file":"static/js/115.bbc0e890.chunk.js","mappings":"sMA6DA,UAxDe,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwBJ,EAAAA,EAAAA,WAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAkCR,EAAAA,EAAAA,WAAS,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACJV,GAAeI,IACjBK,GAAa,IACbE,EAAAA,EAAAA,IAAUX,EAAa,GACpBY,MAAK,SAAAC,GACJV,EAAiBU,EAAKC,QACvB,IACAC,OAAM,SAAAC,GACLT,EAASS,EACV,IACAC,SAAQ,WACPZ,GAAQ,GACRI,GAAa,GACbR,EAAe,GAChB,IAEN,GAAE,CAACD,EAAaI,KAEf,4BACE,2CACA,kBACEc,KAAK,OACLC,YAAY,iCACZC,UAAQ,EACRC,MAAOrB,EACPsB,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEC,OAAOH,MAA5B,KAEb,mBACEI,QAAS,WACHzB,GAAeA,EAAY0B,OAAS,GACtCrB,GAAQ,EAEX,EALH,oBASU,MAATC,IAAiB,uBAAIA,IACrBE,IAAa,SAAC,IAAD,KACd,wBACGN,EAAcyB,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAnB,SAA0BF,EAAMG,SADzBH,EAAME,GADO,QAQ/B,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovies } from '../../services/api';\nimport { Loader } from '../Loader/Loader';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [goit, setGoit] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (searchQuery && goit) {\n      setIsLoading(true);\n      getMovies(searchQuery, 1)\n        .then(data => {\n          setSearchResults(data.results);\n        })\n        .catch(err => {\n          setError(err);\n        })\n        .finally(() => {\n          setGoit(false);\n          setIsLoading(false);\n          setSearchQuery('');\n        });\n    }\n  }, [searchQuery, goit]);\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        placeholder=\"type somethin for searching...\"\n        required\n        value={searchQuery}\n        onChange={e => setSearchQuery(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          if (searchQuery && searchQuery.length > 0) {\n            setGoit(true);\n          }\n        }}\n      >\n        Search\n      </button>\n      {error != null && <p>{error}</p>}\n      {isLoading && <Loader />}\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","goit","setGoit","error","setError","isLoading","setIsLoading","useEffect","getMovies","then","data","results","catch","err","finally","type","placeholder","required","value","onChange","e","target","onClick","length","map","movie","to","id","title"],"sourceRoot":""}